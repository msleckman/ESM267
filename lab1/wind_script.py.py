### by: Margaux Sleckman <msleckman@ucsb.edu>
##
## -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# uv-nc_to_s-tif.py
# Created on: 2018-09-28 10:56:17.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

verbose = True

def comment(message):
    if verbose:
        print message

def pause():
    if verbose:
        raw_input("OK?")

# Import arcpy module with verbose additions
comment("import arcpy ...")

import arcpy

if verbose: print "...whew!"


# Package and allow for overwrite
arcpy.CheckOutExtension("Spatial")
arcpy.env.Workspace = "h:\\ESM267\\lab1\\out"
arcpy.env.overwriteOutput = True

#---------------------------------------------------------
# 1. Adding Loop to Wind Speed Model

# Local variables/Parameters for the loop:
u_nc = "H:\\ESM267\\lab1\\raw\\uwnd.sig995.2013.nc"
u_lyr = "u_lyr"
v_nc = "H:\\ESM267\\lab1\\raw\\vwnd.sig995.2013.nc"
v_lyr = "v_lyr"
s_tmp = "in_memory\\s_tmp"

start_day = 0
end_before_day = 365
increment_days_by = 30
  
# loop over a range of values for j (dont forget ":" after the 'for' statement)

for j in range(start_day, end_before_day, increment_days_by):
    comment("day %03d..." % j)
        # if verbose: print " day %d ..." %j
    
    # assign values based on variable j
    s_tif = "h:\\ESM267\\lab1\\out\\s_%03d.tif" % j
    print s_tif
    s_tmp = "in_memory\\s_%d" % j

    # Process: Make NetCDF Raster Layer
    arcpy.MakeNetCDFRasterLayer_md(u_nc, "uwnd", "lon", "lat", u_lyr, "", "time %d" % j, "BY_INDEX") # we put %d instead of %s because j is a number. J is inputed into a string, but the J itself is a umber

    # Process: Make NetCDF Raster Layer (2)
    arcpy.MakeNetCDFRasterLayer_md(v_nc, "vwnd", "lon", "lat", v_lyr, "", "time %d" % j, "BY_INDEX")

    # Process: Raster Calculator
    arcpy.gp.RasterCalculator_sa("SquareRoot( Square('%s') + Square('%s') )" % (u_lyr, v_lyr), s_tmp)

    # Process: Resample
    arcpy.Resample_management(s_tmp, s_tif, "0.25 0.25", "BILINEAR")

#----------------------------------------------------------------
# 2. Add Summary Functions to Script

# Local Variables
    # for copy features
        # note: in_countries changed to World_EEZ_v8_2014.shp file
in_countries = "H:\\ESM267\\lab1\\raw\\World_EEZ_v8_2014.shp"
out_countries = "H:\\ESM267\\lab1\\lab1.gdb\\countries"
countries = out_countries
    # For cell statistics
s_avg_tif = "H:\\ESM267\\lab1\\out\\s_avg.tif"
s_countries = "H:\\ESM267\\lab1\\lab1.gdb\\s_countries"

# Process
    # Copy Features
arcpy.CopyFeatures_management(in_countries, out_countries, "", "0", "0", "0")

    # Cell Statistics
s_tifs = ["h:\\ESM267\\lab1\\out\\s_%03d.tif" % j for j in range(0, 365, 30)]

arcpy.gp.CellStatistics_sa(s_tifs, s_avg_tif, "MEAN", "DATA")

    # Zonal Statistics as Table for EEZ file
arcpy.gp.ZonalStatisticsAsTable_sa(out_countries, "EEZ", s_avg_tif, s_countries, "DATA", "MIN_MAX_MEAN")

    # Join Field for EEZ file - note that "NAME" variable changed to "EEZ" variable
arcpy.JoinField_management(out_countries, "EEZ", s_countries, "EEZ", "Min;Max;Mean")

# this is the last line in the script - when says "OK?" answer yes/no to finish run
pause()

#-----------------Unused code-----------------

## s_001 replaced with a s_tmp
#s_001_tif = "H:\\ESM267\\lab1\\out\\s_001.tif"

## old list of output files for cell stats - keep displayed to see expected output from for loop
    #s_0_tif = "H:\\ESM267\\lab1\\out\\s_0.tif"
    #s_120_tif = "H:\\ESM267\\lab1\\out\\s_120.tif"
    #s_150_tif = "H:\\ESM267\\lab1\\out\\s_150.tif"
    #s_180_tif = "H:\\ESM267\\lab1\\out\\s_180.tif"
    #s_210_tif = "H:\\ESM267\\lab1\\out\\s_210.tif"
    #s_240_tif = "H:\\ESM267\\lab1\\out\\s_240.tif"
    #s_270_tif = "H:\\ESM267\\lab1\\out\\s_270.tif"
    #s_30_tif = "H:\\ESM267\\lab1\\out\\s_30.tif"
    #s_300_tif = "H:\\ESM267\\lab1\\out\\s_300.tif"
    #s_330_tif = "H:\\ESM267\\lab1\\out\\s_330.tif"
    #s_360_tif = "H:\\ESM267\\lab1\\out\\s_360.tif"
    #s_60_tif = "H:\\ESM267\\lab1\\out\\s_60.tif"
    #s_90_tif = "H:\\ESM267\\lab1\\out\\s_90.tif"

## old rasterCalc with no paste of other files
# arcpy.gp.RasterCalculator_sa("SquareRoot( Square(\"%u_tmp%\") + Square(\"%v_tmp%\") )", s_tmp)

## old version Cell Statistics to check that s_tifs for loop makes sense/works
# arcpy.gp.CellStatistics_sa("H:\\ESM267\\lab1\\out\\s_0.tif;H:\\ESM267\\lab1\\out\\s_120.tif;H:\\ESM267\\lab1\\out\\s_150.tif;H:\\ESM267\\lab1\\out\\s_180.tif;H:\\ESM267\\lab1\\out\\s_210.tif;H:\\ESM267\\lab1\\out\\s_240.tif;H:\\ESM267\\lab1\\out\\s_270.tif;H:\\ESM267\\lab1\\out\\s_30.tif;H:\\ESM267\\lab1\\out\\s_300.tif;H:\\ESM267\\lab1\\out\\s_330.tif;H:\\ESM267\\lab1\\out\\s_360.tif;H:\\ESM267\\lab1\\out\\s_60.tif;H:\\ESM267\\lab1\\out\\s_90.tif", s_avg_tif, "MEAN", "DATA")
    
